plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.11'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.stadistic'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

ext {
	openApi = "2.0.2"
	lombokVersion = "1.18.20"
	mapStructVersion = "1.4.2.Final"
	sqlConector = "8.0.28"
	jjwtVersion = "0.11.5"
}


configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	//SPRING BOOT
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	//OPEN API
	implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${openApi}"

	//MAPSTRUCT
	implementation "org.mapstruct:mapstruct:${mapStructVersion}"
	annotationProcessor "org.mapstruct:mapstruct-processor:${mapStructVersion}"

	//LOMBOK
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	runtimeOnly "mysql:mysql-connector-java:${sqlConector}"

	// JWT
	implementation "io.jsonwebtoken:jjwt-api:${jjwtVersion}"
	runtimeOnly "io.jsonwebtoken:jjwt-impl:${jjwtVersion}"
	runtimeOnly "io.jsonwebtoken:jjwt-jackson:${jjwtVersion}"

	//JUNIT
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.junit.vintage:junit-vintage-engine:5.8.0'

}

tasks.named('bootBuildImage') {
	builder = 'paketobuildpacks/builder-jammy-base:latest'
}

tasks.named('test') {
	useJUnitPlatform()
}
